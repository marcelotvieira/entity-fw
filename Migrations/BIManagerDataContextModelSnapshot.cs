// <auto-generated />
using System;
using BIManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BIManager.Migrations
{
    [DbContext(typeof(BIManagerDataContext))]
    partial class BIManagerDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BIManage.Models.BaseDeDados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("UrlConexao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "UrlConexao" }, "INDEX_BASEDEDADOS_URLCONEXAO")
                        .IsUnique();

                    b.ToTable("BaseDeDados", (string)null);
                });

            modelBuilder.Entity("BIManager.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveEixoXDoGrafico")
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("ChaveEixoYDoGrafico")
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("CompativelComPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false);

                    b.Property<string>("ConsultaSQL")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Consulta", (string)null);
                });

            modelBuilder.Entity("BIManager.Models.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "INDEX_FUNCAO_NOME")
                        .IsUnique();

                    b.ToTable("Funcao", (string)null);
                });

            modelBuilder.Entity("BIManager.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR");

                    b.Property<int?>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("SenhaAleatoria")
                        .HasColumnType("BIT");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex(new[] { "Email" }, "INDEX_USUARIO_EMAIL")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Consultas_BaseDeDados", b =>
                {
                    b.Property<int>("BaseDeDadosId")
                        .HasColumnType("int");

                    b.Property<int>("ConsultaID")
                        .HasColumnType("int");

                    b.HasKey("BaseDeDadosId", "ConsultaID");

                    b.HasIndex("ConsultaID");

                    b.ToTable("Consultas_BaseDeDados");
                });

            modelBuilder.Entity("BIManage.Models.BaseDeDados", b =>
                {
                    b.HasOne("BIManager.Models.Usuario", "Usuario")
                        .WithMany("BasesDeDados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("USUARIO_BASES_DE_DADOS");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BIManager.Models.Usuario", b =>
                {
                    b.HasOne("BIManager.Models.Funcao", "Funcao")
                        .WithMany("Usuarios")
                        .HasForeignKey("FuncaoId")
                        .HasConstraintName("FUNCAO_USUARIO");

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("Consultas_BaseDeDados", b =>
                {
                    b.HasOne("BIManager.Models.Consulta", null)
                        .WithMany()
                        .HasForeignKey("BaseDeDadosId")
                        .IsRequired()
                        .HasConstraintName("BASEDEDADOS_CONSULTA");

                    b.HasOne("BIManage.Models.BaseDeDados", null)
                        .WithMany()
                        .HasForeignKey("ConsultaID")
                        .IsRequired()
                        .HasConstraintName("CONSULTA_BASEDEDADOS");
                });

            modelBuilder.Entity("BIManager.Models.Funcao", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BIManager.Models.Usuario", b =>
                {
                    b.Navigation("BasesDeDados");
                });
#pragma warning restore 612, 618
        }
    }
}
